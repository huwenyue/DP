#include <cstdio>
#include <cstring>
const int maxn = 1010;
char S[maxn];  //字符串S
int dp[maxn][maxn];  //S[i]至S[j]所表示的子串是否是回文串
int main(){
    gets(S);
    int len = strlen(S), ans = 1;   //ans为最长回文子串长度,初始化为1
    memset(dp, 0, sizeof(dp));   //dp数组初始化
    //边界
    for (int i=0; i<len; i++) {
        dp[i][i] = 1;
        if (i<len-1) {
            if (S[i]==S[i+1]) {
                dp[i][i+1] = 1;
                ans = 2;  //注意当前最长回文子串长度为2
            }
        }
    }
    //状态转移方程
    for (int L=3; L<=len; L++) {
        //枚举子串的长度
        for (int i=0; i+L-1<len; i++) {
            //枚举子串的起始端点
            int j=i+L-1;  //子串的右端点
            if (S[i]==S[j] && dp[i+1][j-1]==1) {
                dp[i][j] = 1;  //是回文串
                ans = L;  //更新最长回文子串的长度
            }
        }
    }
    printf("%d\n",ans);
    return 0;
}
