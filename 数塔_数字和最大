#include<cstdio>
#include <algorithm>
using namespace  std;
const int maxn = 1000;
int f[maxn][maxn],dp[maxn][maxn];
int main(){
    int n;
    scanf("%d",&n);
    for (int i=1; i<=n; i++) {
        for (int j=1; j<=i; j++) {
            scanf("%d",&f[i][j]);  //输入数塔
        }
    }
    //边界
    for (int j=1; j<=n; j++) {
        //当i=n时为边界，第n层j的最大值为n
        dp[n][j] = f[n][j];
    }
    //从第n-1层不断往上计算出dp[i][j]
    for (int i=n-1; i>=1; i--) {
        for (int j=1; j<=i; j++) {
            //状态转移方程
            dp[i][j] = max(dp[i+1][j],dp[i+1][j+1])+f[i][j];
        }
    }
    printf("%d\n",dp[1][1]);  //dp[1][1]为需要的答案
    return 0;
}
