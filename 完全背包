
#include <cstdio>
#include <algorithm>
using namespace std;
const int maxn = 100;  //物品最大件数
const int maxv = 1000;  //V的上限
int w[maxn],c[maxn],dp[maxv];   //每件物品的重量，价值，前i件物品恰好装入容量为v的背包所能获得的最大价值
int main(){
    int n,V;
    scanf("%d%d",&n,&V);   //输入n件物品，背包容量为V
    for (int i=1; i<=n; i++) {
        scanf("%d",&w[i]);   //输入物品重量
    }
    for (int i=1; i<=n; i++) {
        scanf("%d",&c[i]);  //输入物品价值
    }
    //边界
    for(int v=0;v<=V;v++){//前0件物品放入任何容量v的背包都只能获得价值0
        dp[v] = 0;
    }
    for(int i=1;i<=n;i++){
        for (int v=w[i]; v<=V; v++) {
            //逆序枚举
            //状态转移方程
            dp[v] = max(dp[v],dp[v-w[i]]+c[i]);
        }
    }
    //寻找dp[0...V]中的最大即为答案
    int max = 0;
    for (int v=0; v<=V; v++) {
        if (dp[v]>max) {
            max = dp[v];
        }
    }
    printf("%d\n",max);
    return 0;
}
